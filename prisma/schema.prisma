generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                  String                @id @unique
  ambulante           Ambulante[]
  //informações pessoais
  nome                String
  email               String               @unique
  senha               String
  cpf                 String                @unique
  data_de_nascimento  DateTime?
  telefone            String?
  foto_url            String?
  descricao           String?
  //informações de endereço
  logradouro          String?
  numero              String?
  complemento         String?
  bairro              String?
  cidade              String?
  estado              String?
  cep                 String?
  localizacao         String?
  //informações de verificação
  verificado          StatusDeVerificacao?
  token_verificacao   String?
  tipo                TipoDeUsuario
  //informações de relacionamento
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  Denuncias           Denuncias[]
  InscricoesDeEventos InscricoesDeEventos[]
}

model Admin {
  id                    String                  @id @unique
  //informações pessoais
  nome                  String
  email                 String                  @unique
  senha                 String
  adminType             AdminType
  //informações de relacionamento
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  //informações de verificação
  verificado            StatusDeVerificacao
  token_verificacao     String?
  //informações de permissões
  Permissoes            Permissoes[]
  ComentarioDeDenuncias ComentarioDeDenuncias[]
}

model Permissoes {
  id                      String  @id @unique
  admin                   Admin   @relation(fields: [adminId], references: [id], onDelete: Cascade)
  adminId                 String
  criacao_de_usuario      Boolean
  distribuicao_de_tarefas Boolean
  requisicoes             Boolean
  denuncias               Boolean
  infracoes               Boolean
  eventos                 Boolean
  relatorios_estrategicos Boolean
}

// --> antiga tabela de requisições
model Ambulante {
  id                      String              @id @unique
  usuario                 Usuario?            @relation(fields: [usuario_id], references: [id])
  usuario_id              String?
  //informações pessoais
  descricao               String
  status                  StatusDeVerificacao
  nome_do_negoocio        String
  tipo_do_negocio         String
  descricao_do_negocio    String
  localizacao_do__negocio String
  fotos_do_negocio        String[]
  documentacao            String[]
  //informações de relacionamento
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt
}

model Denuncias {
  id                      String                  @id @unique
  usuario                 Usuario?                @relation(fields: [usuario_id], references: [id])
  usuario_id              String?
  //informações da denuncia
  descricao               String
  status                  StatusDeDenuncia
  localizacao             String?
  fotos                   String[]
  codigo_de_busca         String
  //informações de fiscal
  comentarios_de_denuncia ComentarioDeDenuncias[]
  //informações de relacionamento
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
}

model ComentarioDeDenuncias {
  id          String     @id @unique
  denuncia    Denuncias? @relation(fields: [denuncia_id], references: [id], onDelete: Cascade)
  denuncia_id String
  fiscal      Admin?     @relation(fields: [fiscal_id], references: [id])
  fiscal_id   String
  //informações do comentario
  descricao   String
}

model Evento {
  id             String   @id @unique
  //informações do evento
  nome           String
  data_de_inicio DateTime
  data_de_fim    DateTime
  localizacao    String
  ativo          Boolean
  imagens        String[]
  descricao      String
  vagas          Int
  InscricoesDeEventos InscricoesDeEventos[]
}

model InscricoesDeEventos {
  id                String              @id @unique
  evento            Evento?             @relation(fields: [evento_id], references: [id], onDelete: Cascade)
  evento_id         String
  usuario           Usuario?            @relation(fields: [usuario_id], references: [id], onDelete: Cascade)
  usuario_id        String
  data_de_inscricao DateTime            @default(now())
  status            StatusDeVerificacao
}

enum TipoDeUsuario {
  PESSOA_FISICA
  PESSOA_JURIDICA
}

enum StatusDeVerificacao {
  PENDENTE
  APROVADO
  REPROVADO
}

enum AdminType {
  SUPER_ADMIN
  GESTOR
  FISCAL
}

enum StatusDeDenuncia {
  RECEBIDA
  EM_ANALISE
  CONCLUIDA
}
