generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                 String              @id @default(cuid())
  ambulante          Ambulante[]
  //informações pessoais
  nome               String
  email              String              @unique
  senha              String
  cpf                String              @unique
  data_de_nascimento DateTime
  telefone           String
  foto_url           String?
  descricao          String?
  //informações de endereço
  logradouro         String
  numero             String
  complemento        String?
  bairro             String
  cidade             String
  estado             String
  cep                String
  localizacao        String
  //informações de verificação
  verificado         StatusDeVerificacao
  token_verificacao  String?
  tipo               TipoDeUsuario
  //informações de relacionamento
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
}

model Admin {
  id                String              @id @default(cuid())
  //informações pessoais
  nome              String
  email             String              @unique
  senha             String
  adminType         AdminType
  //informações de relacionamento
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  //informações de verificação
  verificado        StatusDeVerificacao
  token_verificacao String?
  //informações de permissões
  Permissoes        Permissoes[]
}

model Permissoes {
  id                      String  @id @default(cuid())
  admin                   Admin   @relation(fields: [adminId], references: [id], onDelete: Cascade)
  adminId                 String
  criacao_de_usuario      Boolean
  distribuicao_de_tarefas Boolean
  requisicoes             Boolean
  denuncias               Boolean
  infracoes               Boolean
  eventos                 Boolean
  relatorios_estrategicos Boolean
}

// --> antiga tabela de requisições
model Ambulante { 
  id                      String              @id @default(cuid())
  usuario                 Usuario?            @relation(fields: [usuario_id], references: [id])
  usuario_id              String?
  //informações pessoais
  descricao               String
  status                  StatusDeVerificacao
  nome_do_negoocio        String
  tipo_do_negocio         String
  descricao_do_negocio    String
  localizacao_do__negocio String
  fotos_do_negocio        String[]
  documentacao            String[]
  //informações de relacionamento
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt
}

enum TipoDeUsuario {
  PESSOA_FISICA
  PESSOA_JURIDICA
}

enum StatusDeVerificacao {
  PENDENTE
  APROVADO
  REPROVADO
}

enum AdminType {
  SUPER_ADMIN
  GESTOR
  FISCAL
}
